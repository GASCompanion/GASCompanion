// import React from 'react';
// export default ({ data }) => <pre>{JSON.stringify(data, null, 2)}</pre>;

import React from 'react';
import { css } from '@emotion/react';

import Layout from '@mklabs/gatsby-theme-docs/src/components/Layout';
import SEO from '@mklabs/gatsby-theme-docs/src/components/SEO';
import slugify from '@mklabs/gatsby-theme-docs/src/util/slug';
import Image from "./image"
import { Link } from "gatsby"
import TableParams from './table-params';


const Docs = ({ data, pageContext }) => {
    const title = `${pageContext.classParent}`
    const description = `Generated API documentation for ${pageContext.classParent}`
    const slug = pageContext.slug
    const image = ""

    const members = data.members.edges
    const images = data.images.edges

    const headings = members.map(({ node }) => ({
        depth: 2,
        value: node.name
    }))

    const findXML = (node, name) => {
        return node.xml.find(item => item.name === name)
    }

    const findImage = (node) => {
        const imgNode = node.xml.find(item => item.name === "imgpath");
        const relativePath = imgNode.content.replace(/^\.\./, node.dirname)
        const img = images.find(({ node }) => node.parent.relativePath === relativePath)
        if (!img) console.log(node, images, relativePath)
        if (!img) {
            // TODO: for unkwnon reason, Set{Health, Stamina, Mana}Percentage images are not generated by KantanDoc
            return undefined;
        }
        return img.node.fixed;
    }

    return (
        <>
            <SEO title={title} description={description} slug={slug} image={image} />
            <Layout
                disableTableOfContents={false}
                title={title}
                headings={headings}
            >

                {members.map(({ node }) => (
                    <div key={node.name}>
                        <div css={css`padding-bottom: 24px;`}>
                            <h2 id={slugify(node.name)}>{node.name}</h2>
                            <p>
                                {findXML(node, `description`).content}
                            </p>

                            <Image fixed={findImage(node)} />

                            <TableParams node={node} type="Inputs" />

                            <TableParams node={node} type="Outputs" />
                        </div>

                        <hr />
                    </div>
                ))}

                <p css={css`margin: 48px 0; text-align: center; font-style: italic`}>
                    API documentation generated thanks to <Link to="http://kantandev.com/free/kantan-doc-gen">Kantan Doc Gen</Link>
                </p>

            </Layout>
        </>
    );
}

export default Docs